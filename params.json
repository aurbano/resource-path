{
  "name": "/resource/:path",
  "tagline": "Tiny module to generate resource paths for APIs with zero dependencies",
  "body": "[![Travis](https://img.shields.io/travis/aurbano/resource-path.svg)](https://travis-ci.org/aurbano/resource-path)\r\n[![npm](https://img.shields.io/npm/v/resource-path.svg)](https://www.npmjs.com/package/resource-path)\r\n[![Coverage Status](https://coveralls.io/repos/github/aurbano/resource-path/badge.svg?branch=master)](https://coveralls.io/github/aurbano/resource-path?branch=master)\r\n[![npm](https://img.shields.io/npm/dm/resource-path.svg)](https://www.npmjs.com/package/resource-path)\r\n[![npm](https://img.shields.io/npm/l/resource-path.svg)](https://www.npmjs.com/package/resource-path)\r\n\r\nThis module implements Angular's resource URL definition, so that you can easily interact with an API.\r\n\r\nExample:\r\n\r\n```js\r\nimport resource from 'resource-path';\r\n\r\nconst input = '/path/to/resource/:id';\r\nconst params = {\r\n  id: 123\r\n};\r\n\r\nresource(input, params);\r\n// Returns: /path/to/resource/123\r\n```\r\n\r\n```js\r\nconst input = '/path/to/resource/:id/something/:param2';\r\nconst params = {\r\n  id: 123\r\n};\r\n\r\nresource(input, params);\r\n// Returns: /path/to/resource/123\r\n```\r\n\r\n## Getting started\r\n\r\nInstall:\r\n\r\n```bash\r\nnpm install --save resource-path\r\n# or if you prefer yarn\r\nyarn add resource-path\r\n```\r\n\r\nUsage\r\n\r\n```js\r\nimport resource from 'resource-path';\r\n\r\nresource(path, [params]);\r\n```\r\n\r\n* `path` `{string}` Is the path to the resource. Either a full URL or a relative path. It can contain identifiers in the form of `:identifier` in any part of the path.\r\n* `params` `{Object}` An object with key/value pairs, where the keys are identifiers in the path, and the value is what will be replaced in it.\r\n \r\nThe `resource` method will return the path, substituting the params whenever if finds an indentifier. As soon as it finds an identifier without a specified parameter it stops.This way you can define full API paths that are reusable.\r\n \r\n## Testing\r\n \r\nTests are located in the `tests` folder, and are written with `ava`.\r\n \r\n## Contributing\r\n \r\nFeel free to send any PR with new features, more test cases...\r\n \r\n## License\r\n \r\nThis project is licensed under the MIT License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}